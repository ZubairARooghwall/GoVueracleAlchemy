CREATE TABLE USERS (
    USERID INTEGER PRIMARY KEY,
    USERNAME VARCHAR2(30) UNIQUE,
    EMAIL VARCHAR2(255),
    PASSWORD VARCHAR2(64),
    SALT RAW(64),
    USERROLE VARCHAR2(10),
    EDUCATION VARCHAR2(15),
    CREATIONTIME TIMESTAMP
);

CREATE TABLE PROFILES (
    PROFILEID VARCHAR2(255) PRIMARY KEY,
    USERID CONSTRAINT (USERID) REFERENCES USERS(USERID),
    PROFILEPICTURE VARCHAR2(255),
    STATUS BOOLEAN,
    BIOGRAPHY VARCHAR2(1000)
);

CREATE TABLE USERSESSIONS (
    SESSIONID VARCHAR2(255) PRIMARY KEY,
    USERID CONSTRAINT (USERID) REFERENCES USERS(USERID),
    SESSIONTOKEN VARCHAR2(64),
    EXPIRYDATE DATE,
    USERIPADDRESS VARCHAR2(15),
    BROWSER VARCHAR2(20)
);

CREATE TABLE FILES (
    FILEID VARCHAR2(500),
    FILENAME VARCHAR(255),
    UNIQUENAME VARCHAR(500) TYPE VARCHAR2(10),
    FILESIZE INTEGER,
    CREATIONTIME TIMESTAMP,
    OWNER CONSTRAINT (USERID) REFERENCES USERS(USERID),
    FOLDER CONSTRAINT (FOLDERID) REFERENCES FOLDERS(FOLDERID),
    TAG CONSTRAINT (TAGID) REFERENCES TAG(TAGID),
);

CREATE TABLE PERMISSIONS (
    PERMISSIONID VARCHAR2(255) PRIMARY KEY,
    FILEID CONSTRAINT (FILEID) REFERENCES FILES(FILESID),
    USERID CONSTRAINT (USERID) REFERENCES USERS(USERID),
    PERMISSIONTYPE CHAR(1),
    CreationTime TIMESTAMP
);

CREATE TABLE FOLDERS (
    FOLDERID VARCHAR2(500) PRIMARY KEY,
    USERID CONSTRAINT (USERID) REFERENCES USERS(USERID),
    FOLDERNAME VARCHAR2(255) UNIQUE,
    CREATIONDATE TIMESTAMP,
    FOLDERSIZE INTEGER
);

CREATE TABLE ACTIVITYLOG (
    ACTIVITYID INTEGER PRIMARY KEY,
    ACTIVITY VARCHAR2(10),
    CREATIONTIME TIMESTAMP,
    USERID CONSTRAINT (USERID) REFERENCES USERS(USERID),
    FILEID CONSTRAINT (FILEID) REFERENCES FILES(FILEID),
);

CREATE TABLE TAGS (
    TAGNAME VARCHAR2(255) PRIMARY KEY,
    CREATIONTIME TIMESTAMP,
    COLOR VARCHAR2(7)
);

CREATE TABLE MEETINGS (
    MEETINGID VARCHAR2(255) PRIMARY KEY,
    TITLE VARCHAR2(255),
    DESCRIPTION VARCHAR2(500),
    ORGANIZERID CONSTRAINT (USERID) REFERENCES USERS(USERID),
    STARTTIME TIMESTAMP,
    ENDTIME TIMESTAMP
    URL VARCHAR2(1000) UNIQUE
);


CREATE TABLE MEETINGLOGS (
    MEETINGLOGSID VARCHAR2(255) PRIMARY KEY,
    MEETINGID CONSTRAINT (MEETINDID) REFERENCES MEETINGS(MEETINGID),
    CREATIONTIME TIMESTAMP,
    USERID CONSTRAINT (USERID) REFERENCES USERS(USERID),
    Activity VARCHAR2(20),
    DESCRIPTION VARCHAR2(1000)
);

CREATE TABLE NOTES (
    NOTEID VARCHAR2(1000) PRIMARY KEY,
    MEETINGID CONSTRAINT (MEETINGID) REFERENCES MEETINGS(MEETINGID),
    CREATIONTIME TIMESTAMP,
    CONTENT VARCHAR2(1000),
    PERMISSION CHAR(1)
);

CREATE TABLE FRIENDSHIPS (
    FRIENDID VARCHAR2(512) PRIMARY KEY,
    USERID CONSTRAINT (USERID) REFERENCES USERS(UserID),
    FRIEND CONSTRAINT (USERID) REFERENCES Users(UserID),
    STATUS VARCHAR2(20)
);

CREATE TABLE MESSAGES (
    MESSAGEID VARCHAR2(4000) PRIMARY KEY,
    SENDER CONSTRAINT (USERID) REFERENCES USERS(USERID),
    ISSENT BOOLEAN,
    ISREAD BOOLEAN,
    CREATIONTIME TIMESTAMP,
    CONTENT VARCHAR2(500)
);

CREATE TABLE NOTIFICATIONS (
    NOTIFICATIONID VARCHAR2(255) PRIMARY KEY,
    TOUSER CONSTRAINT (USERID) REFERENCES USERS(USERID),
    NOTIFICATIONTYPE CHAR(7),
    CREATIONTIME TIMESTAMP,
    FROMUSER CONSTRAINT (USERID) REFERENCES USERS(USERID),
    CONTENT VARCHAR2(255),
    ISREAD BOOLEAN
)