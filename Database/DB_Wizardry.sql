CREATE TABLE USERS (
    USERID INTEGER PRIMARY KEY,
    USERNAME VARCHAR2(30) UNIQUE,
    EMAIL VARCHAR2(255),
    PASSWORD VARCHAR2(256),
    SALT RAW(64),
    USERROLE VARCHAR2(10),
    EDUCATION VARCHAR2(15),
    CREATIONTIME TIMESTAMP
);

CREATE TABLE PROFILES (
    PROFILEID VARCHAR2(255) PRIMARY KEY,
    USERID INTEGER,
    PROFILEPICTURE VARCHAR2(255),
    STATUS BOOLEAN,
    BIOGRAPHY VARCHAR2(1000)
);

ALTER TABLE PROFILES ADD CONSTRAINT PROFILE_USERS_FK FOREIGN KEY (USERID) REFERENCES USERS(USERID);

CREATE TABLE USERSESSIONS (
    SESSIONID VARCHAR2(255) PRIMARY KEY,
    USERID INTEGER,
    SESSIONTOKEN VARCHAR2(64),
    EXPIRYDATE DATE,
    USERIPADDRESS VARCHAR2(15),
    BROWSER VARCHAR2(20)
);

ALTER TABLE USERSESSIONS ADD CONSTRAINT USERSESSIONS_USERS_FK FOREIGN KEY (USERID) REFERENCES USERS(USERID);

CREATE TABLE FOLDERS (
    FOLDERID VARCHAR2(500) PRIMARY KEY,
    USERID INTEGER,
    FOLDERNAME VARCHAR2(255) UNIQUE,
    CREATIONDATE TIMESTAMP,
    FOLDERSIZE INTEGER
);

ALTER TABLE FOLDERS ADD CONSTRAINT FOLDERS_USERS_FK FOREIGN KEY (USERID) REFERENCES USERS(USERID);

CREATE TABLE TAGS (
    TAGNAME VARCHAR2(255) PRIMARY KEY,
    CREATIONTIME TIMESTAMP,
    COLOR VARCHAR2(7)
);

CREATE TABLE FILES (
    FILEID VARCHAR2(500),
    FILENAME VARCHAR(255),
    UNIQUENAME VARCHAR(500) TYPE VARCHAR2(10),
    FILESIZE INTEGER,
    CREATIONTIME TIMESTAMP,
    OWNER Integer,
    FOLDER varchar2(500),
    TAG varchar2(255)
);

alter table files add CONSTRAINT files_users_fk FOREIGN key (OWNER) references users(userid);
alter table files add constraint file_folders_fk foreign key (FOLDER) references folders(folderid);
alter table files add contrains files_tags_fk foreign key (TAG) references tags(tagname); 



CREATE TABLE PERMISSIONS (
    PERMISSIONID VARCHAR2(255) PRIMARY KEY,
    FILEID VARCHAR2(500),  
    USERID InTEGER,
    PERMISSIONTYPE CHAR(1),
    CreationTime TIMESTAMP
);

alter table permissions add constraint permissions_files_fk foreign key (fileid) references files(fileid);
alter table permissions add constraint permissions_users_fk foreign key (userid) references users(userid);

CREATE TABLE ACTIVITYLOG (
    ACTIVITYID INTEGER PRIMARY KEY,
    ACTIVITY VARCHAR2(10),
    CREATIONTIME TIMESTAMP,
    USERID integer,
    FILEID varchar2(500),
);

alter table ACTIVITYLOGS add constraint activitylogs_users_fk foreign key (userid) references users(userid);
alter table ACTIVITYLOGS add constraint activitylogs_files_fk foreign key (fileid) references files(fileid);


CREATE TABLE MEETINGS (
    MEETINGID VARCHAR2(255) PRIMARY KEY,
    TITLE VARCHAR2(255),
    DESCRIPTION VARCHAR2(500),
    ORGANIZERID INTEGER,
    STARTTIME TIMESTAMP,
    ENDTIME TIMESTAMP
    URL VARCHAR2(1000) UNIQUE
);

alter table meetings add constraint meetings_users_fk foreign key (ORGANIZERID) references users(userid);

CREATE TABLE MEETINGLOGS (
    MEETINGLOGSID VARCHAR2(255) PRIMARY KEY,
    MEETINGID VARCHAR2(255),
    CREATIONTIME TIMESTAMP,
    USERID INTEGER,
    Activity VARCHAR2(20),
    DESCRIPTION VARCHAR2(1000)
);

alter table meetinglogs add constraint meetinglogs_users_fk foreign key (userid) references users(userid);

CREATE TABLE NOTES (
    NOTEID VARCHAR2(1000) PRIMARY KEY,
    MEETINGID VARCHAR2(255),
    OWNER INTEGER,
    CREATIONTIME TIMESTAMP,
    CONTENT VARCHAR2(1000),
    PERMISSION CHAR(1)
);


alter table notes add constraint notes_meetings_fk foreign key (meetingid) references meetings(meetingid);
alter table notes add constraint notes_users_fk FOREIGN key (owner) references users(userid);


CREATE TABLE FRIENDSHIPS (
    FRIENDID VARCHAR2(512) PRIMARY KEY,
    USERID INTEGER,
    FRIENDID INTEGER,
    STATUS VARCHAR2(20)
);

alter table friendships add constraint friendships_users_fk FOREIGN key (userid) references users(userid);
alter table friendships add constraint friendship_friend_fk foreign key (friendid) references users(userid);

CREATE TABLE MESSAGES (
    MESSAGEID VARCHAR2(4000) PRIMARY KEY,
    SENDER CONSTRAINT (USERID) REFERENCES USERS(USERID),
    ISSENT BOOLEAN,
    ISREAD BOOLEAN,
    CREATIONTIME TIMESTAMP,
    CONTENT VARCHAR2(500)
);




CREATE TABLE NOTIFICATIONS (
    NOTIFICATIONID VARCHAR2(255) PRIMARY KEY,
    TOUSER CONSTRAINT (USERID) REFERENCES USERS(USERID),
    NOTIFICATIONTYPE CHAR(7),
    CREATIONTIME TIMESTAMP,
    FROMUSER CONSTRAINT (USERID) REFERENCES USERS(USERID),
    CONTENT VARCHAR2(255),
    ISREAD BOOLEAN
);